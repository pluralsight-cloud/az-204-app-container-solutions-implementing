{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "11335153870720484529"
    }
  },
  "parameters": {
    "tenantId": {
      "type": "string",
      "defaultValue": "84f1e4ea-8554-43e1-8709-f0b8589ea118",
      "metadata": {
        "description": "The tenant ID for the Service Principal (Application), use the default value for the Sandbox"
      }
    },
    "applicationClientId": {
      "type": "string",
      "metadata": {
        "description": "The Client ID for the Service Principal (Application). Retrieve this value from the details of your Sandbox instance."
      }
    },
    "applicationClientSecret": {
      "type": "securestring",
      "metadata": {
        "description": "The Client Secret for the Service Principal (Application). Retrieve this value from the details of your Sandbox instance."
      }
    }
  },
  "variables": {
    "sqlServerName": "[format('sql-crf-{0}', variables('uniqueSuffix'))]",
    "sqlAdministratorLogin": "sqlAdmin",
    "sqlAdministratorLoginPassword": "SuperSecretPassword1234",
    "databaseName": "carvedrockfitnessdb",
    "location": "[resourceGroup().location]",
    "uniqueSuffix": "[uniqueString(resourceGroup().id)]"
  },
  "resources": [
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2021-02-01-preview",
      "name": "[variables('sqlServerName')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "SQL Server"
      },
      "properties": {
        "administratorLogin": "[variables('sqlAdministratorLogin')]",
        "administratorLoginPassword": "[variables('sqlAdministratorLoginPassword')]",
        "version": "12.0"
      }
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2022-02-01-preview",
      "name": "[format('{0}/{1}', variables('sqlServerName'), 'firewallRules')]",
      "properties": {
        "endIpAddress": "0.0.0.0",
        "startIpAddress": "0.0.0.0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2021-02-01-preview",
      "name": "[format('{0}/{1}', variables('sqlServerName'), variables('databaseName'))]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "Database"
      },
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": 1073741824
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('acrcrf{0}', variables('uniqueSuffix'))]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "adminUserEnabled": true,
        "anonymousPullEnabled": true
      }
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2025-01-01",
      "name": "[format('ace-crf-{0}', variables('uniqueSuffix'))]",
      "location": "[variables('location')]",
      "properties": {
        "workloadProfiles": [
          {
            "name": "Consumption",
            "workloadProfileType": "Consumption"
          }
        ]
      }
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2025-01-01",
      "name": "[format('aca-crf-{0}', variables('uniqueSuffix'))]",
      "location": "[variables('location')]",
      "properties": {
        "environmentId": "[resourceId('Microsoft.App/managedEnvironments', format('ace-crf-{0}', variables('uniqueSuffix')))]",
        "configuration": {
          "ingress": {
            "external": true,
            "targetPort": 8080
          }
        },
        "template": {
          "containers": [
            {
              "name": "carvedrockfitness",
              "image": "[format('{0}/carvedrockfitness:v1', reference(resourceId('Microsoft.ContainerRegistry/registries', format('acrcrf{0}', variables('uniqueSuffix'))), '2021-06-01-preview').loginServer)]",
              "resources": {
                "cpu": 1,
                "memory": "2.0Gi"
              }
            }
          ],
          "scale": {
            "minReplicas": 1,
            "maxReplicas": 1
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments', format('ace-crf-{0}', variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.ContainerRegistry/registries', format('acrcrf{0}', variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.Resources/deploymentScripts', 'ds-deploymentscript')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "ds-deploymentscript",
      "location": "[variables('location')]",
      "kind": "AzureCLI",
      "properties": {
        "forceUpdateTag": "1",
        "azCliVersion": "2.9.1",
        "environmentVariables": [
          {
            "name": "APP_ID",
            "value": "[parameters('applicationClientId')]"
          },
          {
            "name": "CLIENT_SECRET",
            "value": "[parameters('applicationClientSecret')]"
          },
          {
            "name": "TENANT_ID",
            "value": "[parameters('tenantId')]"
          }
        ],
        "scriptContent": "    az login --service-principal --username $APP_ID --password $CLIENT_SECRET --tenant $TENANT_ID\n    RG=$(az group list --query [].name --output tsv)\n    LOCATION=$(az group list --query [].location --output tsv)\n    ACR=$(az acr list --resource-group $RG --query [].name --output tsv)\n    git clone https://github.com/WayneHoggett-ACG/CarvedRockFitness.git\n    cd CarvedRockFitness\n    az acr build --registry $ACR --image carvedrockfitness:v1 .\n    ",
        "supportingScriptUris": [],
        "timeout": "PT30M",
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "PT1H"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', format('acrcrf{0}', variables('uniqueSuffix')))]"
      ]
    }
  ]
}